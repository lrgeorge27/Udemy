Node.js handled I/O - input/output scalability, not computational scalability. 
Impt that reading from db doesn't slow down the the process
- when asynchronous I/O methods run the use callback functions to deliver data.
Computational blocker - process where code takes quite a while to execute, it blocks the actual named process
- non-blocking computations use spawn processes to run computations separately. 

npm install - will install all dependencies needed 

npm install --production - installs all dependencies except those marked dev

app. set - defines a property of the application
app.get - retreives

Routes:

Separation of concerns - move different types of code into different places to keep them separate from each other
 - separate logic from routing, UI, data models

Level 12
Controller - controls what happens when a certain route is visited.
No hard coded data in route or controllers

Level 13
URL Parameters

query strings for get requests
forms for post requests
paganation - count and offset

Need middleware for posted form - npm body parser


